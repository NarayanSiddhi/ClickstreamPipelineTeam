[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Siddhi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Siddhi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 107.6319ms
[debug]       Load.loadUnit: defsScala took 0.4303ms
[debug] [Loading] Scanning directory C:\Users\Siddhi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Siddhi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.1225 ms
[debug]           Load.resolveProject(global-plugins) took 141.4794ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Siddhi\.sbt\1.0\plugins, plugins: List(<none>))) took 179.4298ms
[debug] [Loading] Done in C:\Users\Siddhi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 205.6432ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3987ms
[debug]     Load.loadUnit(file:/C:/Users/Siddhi/.sbt/1.0/plugins/, ...) took 323.1592ms
[debug]   Load.apply: load took 505.8417ms
[debug]   Load.apply: resolveProjects took 6.3522ms
[debug]   Load.apply: finalTransforms took 58.5219ms
[debug]   Load.apply: config.delegates took 10.7347ms
[debug]   Load.apply: Def.make(settings)... took 435.9363ms
[debug]   Load.apply: structureIndex took 96.7565ms
[debug]   Load.apply: mkStreams took 2.0029ms
[info] loading global plugins from C:\Users\Siddhi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2695.1833ms
[debug]           Load.loadUnit: plugins took 34.5188ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject\project
[debug]             Load.loadUnit: mkEval took 14.5472ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1416 ms
[info] loading settings for project clickstreamdatapipelineproject-build from idea.sbt ...
[debug]               Load.resolveProject(clickstreamdatapipelineproject-build) took 3.316ms
[debug]             Load.loadTransitive: finalizeProject(Project(id clickstreamdatapipelineproject-build, base: C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject\project, plugins: List(<none>))) took 6.0277ms
[debug] [Loading] Done in C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject\project, returning: (clickstreamdatapipelineproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2924.3465ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.0781ms
[debug]         Load.loadUnit(file:/C:/Users/Siddhi/Desktop/ClckstreamTeamCommon/ClickstreamDataPipelineProject/project/, ...) took 2966.1081ms
[debug]       Load.apply: load took 2967.7556ms
[debug]       Load.apply: resolveProjects took 0.1369ms
[debug]       Load.apply: finalTransforms took 12.5102ms
[debug]       Load.apply: config.delegates took 0.6292ms
[debug]       Load.apply: Def.make(settings)... took 160.1134ms
[debug]       Load.apply: structureIndex took 33.051ms
[debug]       Load.apply: mkStreams took 0.0045ms
[info] loading project definition from C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4957.3583ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject
[debug]       Load.loadUnit: mkEval took 0.3029ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.3509 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 51.4059ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject, plugins: List(<none>))) took 61.1949ms
[debug] [Loading] Done in C:\Users\Siddhi\Desktop\ClckstreamTeamCommon\ClickstreamDataPipelineProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1676.0602ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.6284ms
[debug]   Load.loadUnit(file:/C:/Users/Siddhi/Desktop/ClckstreamTeamCommon/ClickstreamDataPipelineProject/, ...) took 6642.898ms
[debug] Load.apply: load took 6645.1079ms
[debug] Load.apply: resolveProjects took 0.1518ms
[debug] Load.apply: finalTransforms took 37.0524ms
[debug] Load.apply: config.delegates took 0.4271ms
[debug] Load.apply: Def.make(settings)... took 116.4718ms
[debug] Load.apply: structureIndex took 33.4077ms
[debug] Load.apply: mkStreams took 0.0051ms
[info] set current project to ClickstreamDataPipelineProject (in build file:/C:/Users/Siddhi/Desktop/ClckstreamTeamCommon/ClickstreamDataPipelineProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49882 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49882, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ClickstreamDataPipelineProject (in build file:/C:/Users/Siddhi/Desktop/ClckstreamTeamCommon/ClickstreamDataPipelineProject/)
[debug] > Exec(idea-shell, None, None)
